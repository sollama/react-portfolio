{"version":3,"sources":["data/socialProfiles.js","components/SocialProfiles.js","components/Title.js","data/portfolio.js","components/Portfolio.js","components/Home.js","components/Header.js","projects/generator/components/MemeItem.js","projects/generator/actions/fetch.js","projects/generator/actions/secrets.js","projects/generator/actions/memeActions.js","projects/generator/components/MyMemes.js","projects/generator/components/MemeGallery.js","projects/generator/reducers/memeReducer.js","projects/generator/index.js","index.js","assets/email_icon.png","assets/github_icon.png","assets/linkedin_icon.png","assets/profile.JPG","assets/pokeman.png","assets/mangotreesupermarket.png","assets/thebridgesconnection.png","assets/atomicantmodels.png","assets/twitterism.png","assets/fontanaplaza.png"],"names":["SOCIAL_PROFILES","id","link","image","emailIcon","githubIcon","linkedinIcon","SocialProfile","props","socialProfile","href","src","alt","style","width","height","margin","SocialProfiles","map","SOCIAL_PROFILE","key","TITLES","Title","state","titleIndex","fadeIn","animateTitles","titleInterval","setInterval","length","setState","timeout","setTimeout","this","clearInterval","clearTimeout","title","className","Component","PORTFOLIO","description","pokeMan","mangoTreeSupermarket","theBridgesConnection","atomicAntModels","twitterism","fontanaPlaza","Portfolio","portfolio","display","padding","Portfolios","Home","displayBio","toggleDisplayBio","profile","onClick","HeaderMenuItem","linkLocation","labelText","Link","to","Header","children","MemeItem","hovered","text0","text1","memeObj","template_id","meme","createMeme","onMouseEnter","onMouseLeave","postMeme","url","name","connect","new_meme_object","dispatch","params","bodyParams","Object","keys","encodeURIComponent","join","console","log","fetch","method","headers","body","then","response","json","postMemeJson","new_meme","type","MyMemes","myMemes","index","data","MemeGallery","memeLimit","Form","inline","FormGroup","ControlLabel","FormControl","onChange","event","target","value","memes","slice","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","subscribe","getState","receiveMemes","Generator","ReactDOM","render","Router","history","createBrowserHistory","Switch","Route","exact","path","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.861d7e2b.chunk.js","sourcesContent":["import emailIcon from '../assets/email_icon.png';\r\nimport githubIcon from '../assets/github_icon.png';\r\nimport linkedinIcon from '../assets/linkedin_icon.png';\r\n\r\nconst SOCIAL_PROFILES = [\r\n  {\r\n    id: 1,\r\n    link: 'mailto:solana.liu@alumni.emory.edu',\r\n    image: emailIcon\r\n  },\r\n  {\r\n    id: 2,\r\n    link: 'https://github.com/sollama',\r\n    image: githubIcon\r\n  },\r\n  {\r\n    id: 3,\r\n    link: 'https://www.linkedin.com/in/solanaliu/',\r\n    image: linkedinIcon\r\n  },\r\n];\r\n\r\nexport default SOCIAL_PROFILES;\r\n","import React from 'react';\r\nimport SOCIAL_PROFILES from '../data/socialProfiles';\r\n\r\nconst SocialProfile = props => {\r\n  const { link, image } = props.socialProfile;\r\n\r\n  return (\r\n    <span>\r\n      <a href={link}>\r\n        <img src={image} alt='social-profile' style={{ width: 35, height: 35, margin: 10 }} />\r\n      </a>\r\n    </span>\r\n  )\r\n}\r\n\r\nconst SocialProfiles = () => (\r\n  <div>\r\n    <h2>Connect with me!</h2>\r\n    <div>\r\n      {\r\n        SOCIAL_PROFILES.map(SOCIAL_PROFILE => {\r\n          return <SocialProfile key={SOCIAL_PROFILE.id} socialProfile={SOCIAL_PROFILE} />;\r\n        })\r\n      }\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default SocialProfiles;\r\n","import React, { Component } from 'react';\r\n\r\nconst TITLES = [\r\n  'a software engineer with a background in neuroscience research ',\r\n  'a lifelong learner and I always enjoy a good challenge'\r\n];\r\n\r\nclass Title extends Component {\r\n  state = { titleIndex: 0, fadeIn: true };\r\n\r\n  componentDidMount() {\r\n    this.timeout = setTimeout(() => this.setState({ fadeIn: false }), 2000);\r\n\r\n    this.animateTitles();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.titleInterval);\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  animateTitles = () => {\r\n    this.titleInterval = setInterval(() => {\r\n      const titleIndex = (this.state.titleIndex + 1) % TITLES.length;\r\n\r\n      this.setState({ titleIndex, fadeIn: true });\r\n\r\n      this.timeout = setTimeout(() => this.setState({ fadeIn: false }), 2000);\r\n    }, 4000);\r\n  }\r\n\r\n  render() {\r\n    const { fadeIn, titleIndex } = this.state;\r\n\r\n    const title = TITLES[titleIndex];\r\n\r\n    return (\r\n      <p className={fadeIn ? 'title-fade-in' : 'title-fade-out'}>I am {title}</p>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import pokeMan from '../assets/pokeman.png';\r\nimport mangoTreeSupermarket from '../assets/mangotreesupermarket.png';\r\nimport theBridgesConnection from '../assets/thebridgesconnection.png';\r\nimport atomicAntModels from '../assets/atomicantmodels.png';\r\nimport twitterism from '../assets/twitterism.png';\r\nimport fontanaPlaza from '../assets/fontanaplaza.png';\r\n\r\nconst PORTFOLIO = [\r\n    {\r\n        id: 1,\r\n        title: 'PokeMan',\r\n        description: 'Poke Bowls & Japanese Cuisine',\r\n        image: pokeMan\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Mango Tree Supermarket',\r\n        description: 'A Grocery Store',\r\n        image: mangoTreeSupermarket\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'The Bridges Connection',\r\n        description: 'Real Estate',\r\n        image: theBridgesConnection\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Atomic Ant Models',\r\n        description: 'Set Design & Architectural Models',\r\n        image: atomicAntModels\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Twitterism',\r\n        description: 'Book Promotion',\r\n        image: twitterism\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Fontana Plaza',\r\n        description: 'Shopping Center',\r\n        image: fontanaPlaza\r\n    },\r\n\r\n\r\n];\r\n\r\nexport default PORTFOLIO;","import React from 'react';\r\nimport PORTFOLIO from '../data/portfolio';\r\nimport '../bootstrap-grid.css';\r\n\r\n\r\nconst Portfolio = props => {\r\n    const { title, image, description } = props.portfolio;\r\n  \r\n    return (\r\n      <div style={{ display: 'inline-block', width: 300, margin: 10 }}>\r\n        <h3>{title}</h3>\r\n        <img src={image} alt='profile' style={{ display: 'inline-block', width: 300, margin: 10, padding:10}}/>\r\n        <p>{description}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\nconst Portfolios = () => {\r\n  return <div>\r\n      <h2>Featured Websites</h2>\r\n      <div>\r\n        {\r\n          PORTFOLIO.map(PORTFOLIO => (\r\n            <Portfolio key={PORTFOLIO.id} portfolio={PORTFOLIO} />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  }\r\n\r\nexport default Portfolios;","import React, {Component} from 'react';\r\nimport SocialProfiles from './SocialProfiles';\r\nimport Title from './Title';\r\nimport profile from '../assets/profile.JPG';\r\nimport Portfolio from './Portfolio';\r\n\r\nclass Home extends Component {\r\n    state = { displayBio: false };\r\n\r\n    toggleDisplayBio = () => {\r\n      this.setState({ displayBio: !this.state.displayBio });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <img src={profile} alt='profile' className='profile' />\r\n          <h1>Hello!</h1>\r\n          <p>My name is Solana.</p>\r\n          <Title />\r\n          <p>I'm always looking forward to working on meaningful projects.</p>\r\n          {\r\n            this.state.displayBio ? (\r\n              <div>\r\n                <p>In addition to coding, I enjoy hot yoga, painting, and making moodboards.</p>\r\n                <button onClick = {this.toggleDisplayBio}>Show Less</button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <button onClick={this.toggleDisplayBio}>Read more</button>\r\n              </div>\r\n            )\r\n          }\r\n          <hr />\r\n          <Portfolio/>\r\n          <hr />\r\n          <SocialProfiles />\r\n\r\n        </div>\r\n      )}\r\n    }\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../index.css'\r\n\r\nconst HeaderMenuItem = ({linkLocation, labelText}) => {\r\n  return <div className='header-menu'><Link to={linkLocation}>{labelText}</Link></div>;\r\n}\r\n\r\nconst Header = ({ children }) => {\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <HeaderMenuItem linkLocation='/' labelText='Home' />\r\n        <HeaderMenuItem linkLocation='/Generator' labelText='Meme Generator' />\r\n      </div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import  React, { Component } from 'react';\r\nimport { createMeme } from '../actions/fetch';\r\nimport { connect } from 'react-redux';\r\n\r\nclass MemeItem extends Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          hovered: false\r\n        }\r\n      }\r\n    \r\n    postMeme() {\r\n        const { text0, text1 } = this.props;\r\n        const memeObj = {\r\n            template_id: this.props.meme.id,\r\n            text0,\r\n            text1\r\n        }\r\n        this.props.createMeme(memeObj);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                className = \"meme-item\"\r\n                onMouseEnter = {() => this.setState({ hovered: true })}\r\n                onMouseLeave = {() => this.setState({ hovered: false })}\r\n                onClick = {()=> this.postMeme()}\r\n            >\r\n                <img\r\n                    src={this.props.meme.url}\r\n                    alt={this.props.meme.name}\r\n                    className = { this.state.hovered ? \"meme-img darken-img\" : \"meme-img\"}\r\n                />\r\n                <p className={ this.state.hovered ? \"meme-text\" : \"no-txt\"}>\r\n                    {this.props.meme.name}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect(null, { createMeme })(MemeItem);","import { username, password } from './secrets';\r\nimport { receiveMemes, newMeme} from './memeActions';\r\n\r\n//performs fetch and handles json data\r\nconst fetchMemesJson = () => {\r\n    return fetch('https://api.imgflip.com/get_memes')\r\n    .then(response => response.json())\r\n}\r\n\r\n//dispatch helps handle asynchronous behavior of api\r\nconst fetchMemes = () => {\r\n    return (dispatch) => {\r\n        return fetchMemesJson()\r\n        .then(json => dispatch(receiveMemes(json)))\r\n    }\r\n}\r\n\r\nconst postMemeJson = (params) => {\r\n    params['username'] = username;\r\n    params['password'] = password;\r\n\r\n    const bodyParams = Object.keys(params).map(key => {\r\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key])\r\n    }).join('&');\r\n\r\n    console.log('bodyParams', bodyParams);\r\n\r\n    return fetch('https://api.imgflip.com/caption_image', {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: bodyParams\r\n  }).then(response => response.json());\r\n}\r\n\r\nconst createMeme = (new_meme_object) => {\r\n    return (dispatch) => {\r\n      return postMemeJson(new_meme_object)\r\n        .then(new_meme => dispatch(newMeme(new_meme)))\r\n    }\r\n  }\r\n\r\nexport {createMeme, fetchMemes}","const username = 'reactportfolio';\r\nconst password = 'narwhalscutetho';\r\n\r\nexport { username, password };","\r\n\r\nexport const RECEIVE_MEMES = 'RECEIVE_MEMES';\r\nexport const NEW_MEME = 'NEW_MEME';\r\n\r\nconst receiveMemes = (json) => {\r\n    const { memes } = json.data\r\n    \r\n    return {\r\n        type: RECEIVE_MEMES,\r\n        memes\r\n    }\r\n}\r\n\r\nconst newMeme = (meme) => {\r\n  return {\r\n    type: NEW_MEME,\r\n    meme\r\n  }\r\n}\r\n\r\n\r\nexport {receiveMemes, newMeme}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass MyMemes extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          {\r\n            this.props.myMemes.map((meme, index) => {\r\n              return (\r\n                <img\r\n                  key={index}\r\n                  src={meme.data.url}\r\n                  alt=\"my-meme\"\r\n                  className=\"my-meme-img\"\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  function mapStateToProps(state) {\r\n    return {\r\n      myMemes: state.myMemes\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, null)(MyMemes);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/index.css';\r\nimport MemeItem from './MemeItem'\r\nimport { Form, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport MyMemes from './MyMemes'\r\n\r\nclass MemeGallery extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          memeLimit: 10,\r\n          text0: \"\",\r\n          text1: \"\"\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"generator\">\r\n                <h2>Welcome to the Meme Generator!</h2>\r\n                <MyMemes/>\r\n                \r\n                <h4 className = \"pad\"><i> Write some text and click on a picture to generate a meme!</i></h4>\r\n                <Form className = \"pad\" inline>\r\n                    <FormGroup>\r\n                        <ControlLabel>Top &nbsp; </ControlLabel>\r\n                        {''}\r\n                        <FormControl \r\n                            type=\"text\"\r\n                            onChange= {event => this.setState({text0: event.target.value})}\r\n                            ></FormControl>\r\n                    </FormGroup>\r\n                    &nbsp; &nbsp;&nbsp;\r\n                    <FormGroup>\r\n                        <ControlLabel>Bottom &nbsp;</ControlLabel>\r\n                        {''}\r\n                        <FormControl \r\n                            type=\"text\"\r\n                            onChange= {event => this.setState({text1: event.target.value})}\r\n\r\n                            ></FormControl>\r\n                    </FormGroup>\r\n                </Form>\r\n                {\r\n                    this.props.memes.slice(0, this.state.memeLimit).map((meme, index) => {\r\n                        return (\r\n                            <MemeItem \r\n                            key={index}\r\n                            meme={meme}\r\n                            text0={this.state.text0}\r\n                            text1={this.state.text1}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n                <div className=\"meme-button\" onClick={() => {\r\n                    this.setState({memeLimit: this.state.memeLimit+10})\r\n                }}>Load 10 more memes...</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MemeGallery);","import { combineReducers } from 'redux';\r\nimport { RECEIVE_MEMES, NEW_MEME } from '../actions/memeActions';\r\n\r\n\r\nconst memes = (state = [], action) => {\r\n    switch(action.type) {\r\n        case RECEIVE_MEMES:\r\n            return action.memes;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction myMemes(state = [], action) {\r\n    switch(action.type) {\r\n      case NEW_MEME:\r\n        state = [...state, action.meme];\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\nconst rootReducer = combineReducers({ memes, myMemes });\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport MemeGallery from './components/MemeGallery';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/memeReducer.js';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { fetchMemes } from './actions/fetch.js';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nstore.subscribe(() => console.log('store', store.getState()));\r\nstore.dispatch(fetchMemes());\r\n\r\nconst Generator = () => {\r\n    return (\r\n        <div>\r\n        <Provider store={store}>\r\n            <MemeGallery />\r\n        </Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Generator;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Switch, Route } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\nimport App from './components/Home';\r\nimport Header from './components/Header';\r\nimport Generator from './projects/generator';\r\n\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <Router history={createBrowserHistory()}>\r\n            <Switch>\r\n                <Route exact path='/' render={() => <Header><App /></Header>} />\r\n                <Route path='/generator' render={() => <Header><Generator /></Header>} />\r\n                <Route path='*' render={() => <Header><App /></Header>}/>\r\n            </Switch>\r\n        </Router> \r\n    </div>,\r\ndocument.getElementById('root'));\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/email_icon.fd99f8e3.png\";","module.exports = __webpack_public_path__ + \"static/media/github_icon.e2a62886.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin_icon.56ab00e8.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.c7a8266e.JPG\";","module.exports = __webpack_public_path__ + \"static/media/pokeman.bfcd2dd1.png\";","module.exports = __webpack_public_path__ + \"static/media/mangotreesupermarket.58c7cbb9.png\";","module.exports = __webpack_public_path__ + \"static/media/thebridgesconnection.a46b32a1.png\";","module.exports = __webpack_public_path__ + \"static/media/atomicantmodels.900596d7.png\";","module.exports = __webpack_public_path__ + \"static/media/twitterism.63b8b407.png\";","module.exports = __webpack_public_path__ + \"static/media/fontanaplaza.5524dc1a.png\";"],"sourceRoot":""}