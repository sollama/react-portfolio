{"id":"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","dependencies":[{"name":"C:\\Users\\Solana\\Documents\\Coding_Projects\\react-portfolio\\portfolio\\package.json","includedInParent":true,"mtime":1595270569342},{"name":"C:\\Users\\Solana\\Documents\\Coding_Projects\\react-portfolio\\portfolio\\node_modules\\@babel\\runtime-corejs2\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1595131205329}],"generated":{"js":"// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}}],"sources":{"../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_to-integer.js":"// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n"},"lineCount":7}},"error":null,"hash":"ce1fb346d0af9f20108f85be3a90c7bb","cacheData":{"env":{}}}